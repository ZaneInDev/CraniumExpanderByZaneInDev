local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

RunService.RenderStepped:Connect(function()
    local LocalPlayerTeam = Players.LocalPlayer.Team
    for _, Player in pairs(Players:GetPlayers()) do
        if Player.Name ~= Players.LocalPlayer.Name then
            if not TeamCheck or Player.Team ~= LocalPlayerTeam then
                local Character = Player.Character or Player.CharacterAdded:Wait()
                local Head = Character:FindFirstChild("Head")
                local Humanoid = Character:FindFirstChild("Humanoid")
                local Torso = Character:FindFirstChild("UpperTorso")
				local ClonedHead = Torso:FindFirstChild("ClonedHead")

                if not ClonedHead and Humanoid.RigType == Enum.HumanoidRigType.R15 then
                    local NewHead = Head:Clone()
                    NewHead.Name = "ClonedHead"
                    NewHead.Parent = Torso

                    -- Remove decals from cloned head
                    for _, Decal in ipairs(NewHead:GetDescendants()) do
                        if Decal:IsA("Decal") then
                            Decal:Destroy()
                        end
                    end
				end
		
				for _, Decal in ipairs(Head:GetDescendants()) do
					if Decal:IsA("Decal") then
						Decal:Destroy()
					end
				end
			
				Head.Size = Vector3.new(HeadSize, HeadSize, HeadSize)
				Head.Material = "ForceField"
				Head.Transparency = Transparency
				Head.Color = v.TeamColor.Color
				Head.CanCollide = false
				Head.Massless = true

				if DeathAnim then
					Character.Humanoid.Died:Connect(function()
						local RespawnTime = Players.RespawnTime
						local Tween = game:GetService('TweenService'):Create(Head, TweenInfo.new(RespawnTime, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = Vector3.new(0, 0, 0), Transparency = 1})
						Tween:Play()
						Head.Size = Vector3.new(0, 0, 0)
						Head.Transparency = 1
					end)
				end
            end
        end
    end
end)
